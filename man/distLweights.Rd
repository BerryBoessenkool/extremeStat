% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distLweights.R
\name{distLweights}
\alias{distLweights}
\title{Compute distribution weights from GOF}
\usage{
distLweights(rmse, order = TRUE, weightc = NA)
}
\arguments{
\item{rmse}{Numeric: Named vector with goodness of fit values (RMSE).
Can also be a data.frame, in which case the column rmse or RMSE is used.}

\item{order}{Logical: should result be ordered by RMSE? DEFAULT: TRUE}

\item{weightc}{Optional: a named vector with custom weights for each distribution.
Are internally normalized to sum=1 after removing nonfitted dists.
Names match the parameter names from \code{rmse}.
DEFAULT: NA}
}
\value{
data.frame
}
\description{
Determine distribution function weights from RMSE for weighted averages.
}
\examples{

distLweights(c(gum=0.20, wak=0.17, gam=0.21))
distLweights(c(gum=0.20, wak=0.17, gam=0.21), order=FALSE)
distLweights(c(gum=0.20))
df <- data.frame(gum=2:5, rmse=3:6)
rownames(df) <- letters[1:4]
distLweights(df)

set.seed(42); x <- data.frame(A=1:5, RMSE=runif(5)) ; x
distLweights(x)
distLweights(x, weightc=c("1"=3, "3"=5)) 
distLweights(x, weightc=c("1"=3, "3"=5), order=FALSE) 

distLweights(data.frame(rmse=1:2))
distLweights(data.frame(Rmse=1:3))
distLweights(data.frame(rmse=1:6))
distLweights(data.frame(rmse=1:11))
distLweights(data.frame(rmse=1:12))
distLweights(data.frame(rmse=sample(1:12)))
distLweights(data.frame(rmse=sample(1:12)), order=FALSE)


# RMSE vs R2 for GOF judgement --------
library(lmomco)
data(annMax)

compranks <- function(d)
{
gofProp <- 0.5
x <- sort(annMax, decreasing=TRUE)[  1:(gofProp*length(annMax))  ]
tcdfs <- plmomco(x,dlf50$parameter[[d]])
ecdfs <- ecdf(annMax)(x) # Empirical CDF
# Root Mean Square Error, R squared:
berryFunctions::linReg(tcdfs, ecdfs, lwd=1, pch=16, main=d, digits=5, xlim=c(0.5, 1),
       ylim=c(0.5, 1), pos1="topleft")
abline(a=0,b=1, lty=3)
c(berryFunctions::rmse(tcdfs, ecdfs), berryFunctions::rsquare(tcdfs, ecdfs))
}

dlf50 <- distLfit(annMax, gofProp=0.5)
dn <- rownames(dlf50$gof)

op <- par(mfrow=c(5,4), mar=rep(1,4), xaxt="n", yaxt="n")
for(i in dn) compranks(i)
par(op)
# so revgum, nor and rice systematically deviate from ECDF.
# RMSE is better to sort by than R2

# custom weights
cw <- c("gpa"=7, "gev"=3, "wak"=6, "wei"=4, "kap"=3.5, "gum"=3, "ray"=2.1,
        "ln3"=2, "pe3"=2.5, "gno"=4, "gam"=5)
dlf <- distLfit(annMax, plot=FALSE, weightc=cw)
distLgofPlot(dlf, ranks=TRUE)


}
\author{
Berry Boessenkool, \email{berry-b@gmx.de}, Dec 2016
}
\seealso{
\code{\link{distLgof}}, \code{\link{distLquantile}}
}
\keyword{distribution}

